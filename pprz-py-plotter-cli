#!/usr/bin/env python3

"""
pprz-py-plotter - Plotting Paparazzi log and data files with Python, NumPy and Matplotlib

Recommended to read the provided pprzlogutils library documentation for more information.

This file is a CLI example, the recommended way is to use the GUI

Author: Pelochus
Date: July 2024
More info: https://github.com/Swarm-Systems-Lab/pprz-py-plotter
"""

import argparse
import os

import pprzlogutils.logparser as lp

# Constants
# NOTE: Change these values to the desired UAV_ID and MESSAGE
UAV_ID = 204 # Only ID in the sample log/data files
MESSAGE = "INS"

def select_id():
    print("NOTE: Available UAV_IDs listed below")
    print(lp.DATA_DICT.keys())
    global UAV_ID
    UAV_ID = int(input("Enter UAV ID from the list above: "))

def select_message():
    print("NOTE: Available messages for UAV_ID %d listed below" % UAV_ID)
    print(lp.DATA_DICT[UAV_ID].keys())
    global MESSAGE
    MESSAGE = input("Enter message name from the list above: ")

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="pprz-py-plotter")
    parser.add_argument('datafile', help="Paparazzi's log .data file")
    parser.add_argument('logfile', help="Paparazzi's log .log file")
    parser.add_argument('-v', '--verbose', dest='verbose', default=False, action='store_true', help="Display debug messages")
    args = parser.parse_args()

    os.makedirs(lp.OUTPUT_DIR, exist_ok=True)
    os.makedirs(lp.TMP_DIR, exist_ok=True)

    # Parse logfile for messages and their variables
    with open(args.logfile, 'r', encoding='utf-8') as logfile:
        lp.make_messages_xml(logfile.read())
        lp.create_structs(lp.TELEMETRY_OUTPUT_FILENAME)

        if args.verbose:
            for n in lp.MESSAGES_TYPES:
                print(n, lp.MESSAGES_TYPES[n])

        # Message var reading example
        '''
            b = lp.MESSAGES_TYPES["PONG"](1)
            print(b, b.TIMESTAMP)
        '''

    # Convert datafile to numpy arrays
    with open(args.datafile, 'r', encoding='utf-8') as datafile:
        lp.parse_datafile(datafile)
        select_id()
        select_message()
        print("Using UAV_ID: %d, and MESSAGE: %s" % (UAV_ID, MESSAGE))
        lp.convert_message_to_numpy(UAV_ID, MESSAGE)